name: Deploy to ECS

on:
  push:
    branches:
      - master  
    #paths:
    #  - my-folder      

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout repo
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Login to ECR
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}      

    # 3. Build and push Docker image
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REPOSITORY: 713881789926.dkr.ecr.eu-north-1.amazonaws.com/custodian:latest  # ECR repo name
        IMAGE_TAG: custodian-api:latest
        DOCKER_FILE: Dockerfiles/api
      run:
        docker build --tag $IMAGE_TAG . -f $DOCKER_FILE --build-arg JWT_SECRET="Rick Sanchez" --build-arg DB="postgres://postgres:Bluefoxinabox7@custodian.crakqyso0o9f.eu-north-1.rds.amazonaws.com:5432/custodian" --build-arg ENV="DEV"
        docker tag $IMAGE_TAG $ECR_REPOSITORY
        docker push $ECR_REPOSITORY

    # 4. Update ECS service
    - name: Deploy to Amazon ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}     
      with:         
        task-definition: ./etc/api-task-definition.json  
        service: custodian-api               
        cluster: custodian-api
        wait-for-service-stability: true