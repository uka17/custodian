name: Deploy to ECS

on:
  push:
    branches:
      - master  
    #paths:
    #  - my-folder      
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}  

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout repo
    - name: Checkout code
      uses: actions/checkout@v3

    # Login to ECR
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1    

    # Generate image tag
    - name: Generate image tag
      id: generate-tag
      run: |
        tag="$(date +%Y%m%d%H%M%S)"
        echo "tag=$tag" >> $GITHUB_ENV
        echo "Generated tag: $tag"  

    # Build and push Docker-image
    - name: Build, tag, and push image to Amazon ECR
      env:
        REPOSITORY_TAG: 713881789926.dkr.ecr.eu-north-1.amazonaws.com/custodian-api
        DOCKER_FILE: Dockerfiles/api
      run: |
        docker build --tag custodian-api:${{ env.tag }} . -f $DOCKER_FILE \
        --build-arg JWT_SECRET="${{ secrets.JWT_SECRET }}" \
        --build-arg DB="${{ secrets.PROD_DB }}" \
        --build-arg ENV="PROD"
        docker tag custodian-api:${{ env.tag }} $REPOSITORY_TAG:${{ env.tag }}
        docker push $REPOSITORY_TAG:${{ env.tag }}

    # Update ECS service
    - name: Deploy to Amazon ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1   
      with:         
        task-definition: ./etc/api-task-definition.json  
        service: custodian-api               
        cluster: custodian-api
        wait-for-service-stability: true